using Microsoft.EntityFrameworkCore;
using Restaurants.Domain.Entities;
using Restaurants.Infrastructure.Persistence;
using Restaurants.Domain.Repositories;

namespace Restaurants.Infrastructure.Repositories
{
    internal class RestaurantsRepository (RestaurantsDbContext dbContext): IRestaurantsRepository
    {

        public async Task<IEnumerable<Restaurant>> GetAllAsync()
        {
            var restaurants = await dbContext.Restaurants.ToListAsync();
            return restaurants;
        }

        public async Task<Restaurant> GetByIdAsync(int id)
        {
            var restaurant = await dbContext.Restaurants
                .Include(r =>r.Dishes)
                .FirstOrDefaultAsync(r => r.Id == id);
            if (restaurant == null)
            {
                throw new KeyNotFoundException($"Restaurant with ID {id} was not found.");
            }
            return restaurant;
        }

        public async Task<int> Create(Restaurant entity)
        {
            dbContext.Restaurants.Add(entity);
            await dbContext.SaveChangesAsync();
            return entity.Id; // Assuming Id is auto-generated by the database

        }
    }

}
